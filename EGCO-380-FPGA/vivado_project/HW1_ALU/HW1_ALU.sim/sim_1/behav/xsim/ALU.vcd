$date
   Thu Feb 13 23:05:38 2025
$end

$version
  2024.2.0
  $dumpfile ("ALU.vcd") 
$end

$timescale
  1ps
$end

$scope module alu_tb $end
$var reg 4 ! op [3:0] $end
$var reg 16 " expected [15:0] $end
$var reg 16 # in1 [15:0] $end
$var reg 16 $ in2 [15:0] $end
$var reg 1 % alu_enable $end
$var wire 16 & out [15:0] $end
$var reg 1 ' clk $end
$scope module alu0 $end
$var wire 4 ( op [3:0] $end
$var wire 16 ) in1 [15:0] $end
$var wire 16 * in2 [15:0] $end
$var wire 1 + clk $end
$var wire 1 , alu_enable $end
$var reg 16 - out [15:0] $end
$upscope $end
$scope begin Block32_3 $end
$var integer 32 . i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end

#0
$dumpvars
bx !
bx "
bx #
bx $
1%
bz &
1'
bx (
bx )
bx *
1+
1,
bz -
bx .
$end

#5000
0'
0+

#10000
1'
1+

#15000
0'
0+

#20000
1'
1+

#25000
0'
0+

#30000
1'
1+

#35000
0'
0+

#40000
1'
1+

#45000
0'
0+

#50000
1'
1+
b0 .

#55000
0'
0+

#60000
b0 !
b1100 "
b101 #
b111 $
b1100 &
1'
b0 (
b101 )
b111 *
1+
b1100 -
b1 .

#65000
0'
0+

#70000
b1 !
b1011 "
b1111 #
b100 $
b1011 &
1'
b1 (
b1111 )
b100 *
1+
b1011 -
b10 .

#75000
0'
0+

#80000
b10 !
b100100 "
b100 #
b1001 $
b100100 &
1'
b10 (
b100 )
b1001 *
1+
b100100 -
b11 .

#85000
0'
0+

#90000
b11 !
b1 "
b101 #
b111 $
b1 &
1'
b11 (
b101 )
b111 *
1+
b1 -
b100 .

#95000
0'
0+

#100000
b100 !
b1000 "
b1001 #
b1100 $
b1000 &
1'
b100 (
b1001 )
b1100 *
1+
b1000 -
b101 .

#105000
0'
0+

#110000
b101 !
b1101 "
b1101 &
1'
b101 (
1+
b1101 -
b110 .

#115000
0'
0+

#120000
b110 !
b101 "
b101 &
1'
b110 (
1+
b101 -
b111 .

#125000
0'
0+

#130000
b111 !
b101000 "
b101 #
b11 $
b101000 &
1'
b111 (
b101 )
b11 *
1+
b101000 -
b1000 .

#135000
0'
0+

#140000
b1000 !
b10 "
b1000 #
b10 $
b10 &
1'
b1000 (
b1000 )
b10 *
1+
b10 -
b1001 .

#145000
0'
0+
